apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "rotisserie.fullname" . }}-static
  chart: {{ template "rotisserie.chart" . }}
  release: {{ .Release.Name }}
  heritage: {{ .Release.Service }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "rotisserie.fullname" . }}-static
    spec:
      containers:
      - name: {{ .Chart.Name }}-static
        image: {{ .Values.imageRepository }}/rotisserie-static:{{ .Values.imageTag }}
        imagePullPolicy: Always
        env:
        - name: NGINX_LISTEN
          value: "*:8082"
        ports:
        - containerPort: 8082
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "rotisserie.fullname" . }}-app
  chart: {{ template "rotisserie.chart" . }}
  release: {{ .Release.Name }}
  heritage: {{ .Release.Service }}
spec:
  template:
    metadata:
      labels:
        app: {{ template "rotisserie.fullname" . }}-app
    spec:
      containers:
        - name: {{ .Chart.Name }}-app
          image: {{ .Values.imageRepository }}/rotisserie-app:{{ .Values.imageTag }}
          env:
          - name: ROTISSERIE_OCR_SERVICE_HOST
            value: {{ template "rotisserie.fullname" .}}-ocr
          - name: ROTISSERIE_OCR_SERVICE_PORT
            value: "3001"
          - name: token
            valueFrom:
              secretKeyRef:
                name: {{ template "rotisserie.fullname" . }}-secrets
                key: token
          - name: clientID
            valueFrom:
              secretKeyRef:
                name: {{ template "rotisserie.fullname" . }}-secrets
                key: clientID
          ports:
            - containerPort: 3000
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "rotisserie.fullname" . }}-ocr
  chart: {{ template "rotisserie.chart" . }}
  release: {{ .Release.Name }}
  heritage: {{ .Release.Service }}
spec:
  template:
    metadata:
      labels:
        app: {{ template "rotisserie.fullname" . }}-ocr
    spec:
      containers:
        - name: {{ .Chart.Name }}-ocr
          image: {{ .Values.imageRepository }}/rotisserie-ocr:{{ .Values.imageTag }}
          ports:
            - containerPort: 3001
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "rotisserie.fullname" . }}-static
  chart: {{ template "rotisserie.chart" . }}
  release: {{ .Release.Name }}
  heritage: {{ .Release.Service }}
spec:
  ports:
  - port: 8082
    protocol: TCP
    name: {{ template "rotisserie.fullname" . }}-static
  selector:
    app: {{ template "rotisserie.fullname" . }}-static
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "rotisserie.fullname" . }}-ocr
  chart: {{ template "rotisserie.chart" . }}
  release: {{ .Release.Name }}
  heritage: {{ .Release.Service }}
spec:
  ports:
  - port: 3001
    protocol: TCP
    name: {{ template "rotisserie.fullname" . }}-ocr
  selector:
    app: {{ template "rotisserie.fullname" . }}-ocr
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "rotisserie.fullname" . }}-app
  chart: {{ template "rotisserie.chart" . }}
  release: {{ .Release.Name }}
  heritage: {{ .Release.Service }}
spec:
  ports:
  - port: 3000
    protocol: TCP
    name: {{ template "rotisserie.fullname" . }}-app
  selector:
    app: {{ template "rotisserie.fullname" . }}-app
---
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: {{ template "rotisserie.fullname" . }}-tls
  namespace: default
spec:
  secretName: {{ template "rotisserie.fullname" . }}-tls
  issuerRef:
    name: {{ template "rotisserie.fullname" . }}-letsencrypt-prod
  dnsNames:
  {{- range .Values.ingress.hostnames}}
  - {{ . }}
  {{- end }}
  acme:
    config:
    - http01:
        ingressClass: nginx
      domains:
      {{- range .Values.ingress.hostnames}}
      - {{ . }}
      {{- end}}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "rotisserie.fullname" . }}-ingress
  chart: {{ template "rotisserie.chart" . }}
  release: {{ .Release.Name }}
  heritage: {{ .Release.Service }}
  annotations:
    kubernetes.io/tls-acme: "True"
    ingress.bluemix.net/redirect-to-https: "True"
spec:
  tls:
  - secretName: {{ template "rotisserie.fullname" .}}-tls
    hosts:
  {{- range .Values.ingress.hostnames }}
    - {{ . }}
  {{- end }}
  rules:
  {{- range .Values.ingress.hostnames }}
  - host: {{ . }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ template "rotisserie.fullname" $ }}-app
          servicePort: 3000
      - path: /static
        backend:
          serviceName: {{ template "rotisserie.fullname" $ }}-static
          servicePort: 8082
  {{- end }}
